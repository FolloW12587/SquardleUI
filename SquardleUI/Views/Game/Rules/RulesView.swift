//
//  RulesView.swift
//  SquardleUI
//
//  Created by Сергей Дубовой on 30.11.2022.
//

import SwiftUI

struct RulesView: View {
    var dismissAction: (() -> ())? = nil
    
    var body: some View {
        VStack {
            if dismissAction != nil {
                DismissButtonView(dismissAction: dismissAction!)
            }
            
            GeometryReader { geometry in
                ScrollView {
                    VStack(alignment: .leading, spacing: 10){
                        HStack(spacing: 0) {
                            Image("grid")
                                .resizable()
                                .frame(width: geometry.size.width / 2, height: geometry.size.width / 2)
                            Text("На поле 5х5 загаданы 6 слов. Задача состоит в том, чтобы их выяснить.")
                        }
                        
                        Group {
                            Text("Как играть?")
                                .font(.title.bold())
                            
                            Text("Вводи слова из пяти букв и жми \"Ввод\". Введенное слово появится как в столбце, так и в колонке, и по каждой букве вы получите подсказки, о которых мы поговорим позднее.\n\nВ начале вам дается 10 попыток. За каждое из первых пяти слов, для которого вы откроете все буквы, вы получите по дополной попытке. Шестое отгаданное слово принесет вам победу! Заметьте, что необязательно вводить конкретное слово, чтобы оно считалось отгаданным, главное, открыть все буквы.")
                        }
                        
                        
                        Group {
                            Text("Как изменить куда вводить слово?")
                                .font(.title.bold())
                            
                            Text("Никак. Первое слово вводится в первую строку и колонку, второе в третью строку и колонку, третье в пятую и так по кругу. Чтобы не запутаться, текущие строки будут подсвечены.\n\nЕсли вы открыли все буквы для какой-то пары строки и столбца, то они будут пропускаться до конца игры.")
                        }
                        
                        
                        Group {
                            Text("Какие бывают подсказки?")
                                .font(.title.bold())
                            
                            HintRuleView(state: .exists, width: geometry.size.width / 5, text: " - буквы \"А\" нет ни в колонке ни в строке, но она есть как минимум в одном из 6 загаданных слов.")
                            
                            HintRuleView(state: .notExists, width: geometry.size.width / 5, text: " - буквы \"А\" нет ни в одном из 6 загаданных слов.")
                            
                            HintRuleView(state: .existsInRowOrColumn(inRowCount: 1, inColumnCount: 0), width: geometry.size.width / 5, text: " - буквы \"А\" нет ни в этой клетке ни в колонке, но есть как МИНИМУМ одна где-то в этой строке. Она также может указывать на уже открытую букву.")
                            
                            HintRuleView(state: .existsInRowOrColumn(inRowCount: 0, inColumnCount: 1), width: geometry.size.width / 5, text: " - буквы \"А\" нет ни в этой клетке ни в строке, но есть как МИНИМУМ одна где-то в этой колонке. Она также может указывать на уже открытую букву.")
                            
                            
                            HintRuleView(state: .existsInRowOrColumn(inRowCount: 2, inColumnCount: 1), width: geometry.size.width / 5, text: " - буквы \"А\" нет в этой клетке, но есть как минимум одна где-то в этой колонке, а также минимум две в этой строке.")
                            
                            HStack(spacing: 10) {
                                TileView(tileModel: TileModel.exampleOpened)
                                    .frame(width: geometry.size.width / 5)
                                    .disabled(true)
                                Text("Если вся клетка стала такой, то вы молодец и отгадали букву! Цель игры состоит в том, чтобы все клетки стали такими!")
                            }
                            
                            Text("Как вы уже поняли, у каждого цвета свое значение. Не запутаться вам помогут стрелочки подсказки.\n\nВы также, возможно, заметили, что даже если в слове несколько раз встречается одна и та же буква, это не значит, что подсказка с ней будет с несколькими парами стрелок. Чтобы подсказка имела несколько пар стрелок, нужно, чтобы в проверяемое тоже входила эта буква несколько раз.\n\nНапример, пусть загадано слово \"ОЛОВО\", в которой 3 буквы \"О\". Если проверочное слово будет \"КОТЕЛ\", то подсказка \"О\" будет с одной парой стрелок. Если проверяемое слово будет \"РОТОР\", то подсказка \"О\" будет иметь 2 пары стрелок и т.д. Если же, наоборот, загадно слово \"КОТЕЛ\", а проверочное слово \"РОТОР\", то подсказка будет с одной парой стрелок. Это значит, что в загаданном слове точно только одна буква \"О\".")
                        }
                        
                        Group {
                            Text("Как увеличить или уменьшить подсказки?")
                                .font(.title.bold())
                            Text("В течении игры вы будете получать все больше и больше подсказок, но мы ограничены размерами экрана, чтобы уместить их всех в удобном формате. В случае, если у вас есть затруднения в чтении подсказки, нажмите на нее и подержите пару секунд. Она раскроется на всю клетку. Чтобы вернуть все как было, просто нажмите на нее.\n\nТакже подсказок может становиться много, они могут начать дублировать друг-друга или дополнять. Чтобы не отвлекаться на такие подсказки, вы можете скрыть их, нажав на них. Чтобы снова их посмотреть, нажмите на сокрытую подсказку снова.\n\nПопробовать как это работает вы можете на интерактивной подсказке ниже")
                            
                            HStack {
                                Spacer()
                                GeometryReader { geo in
                                    HintView(hintModel: HintModel.exampleInRowAndColumn, width: geo.size.width, position: CGPoint(x: geo.size
                                        .width / 2, y: geo.size.width / 2))
                                    
                                }
                                .frame(width: geometry.size
                                    .width / 2, height: geometry.size
                                .width / 2)
                                Spacer()
                            }
                        }

                        Group {
                            Text("Что означают цвета на клавиатуре?")
                                .font(.title.bold())
                            
                            Text("По мере получения подсказок на поле, также будут обновляться и цвета на клавиатуре.")
                            
                            KeyboardKeyRuleView(state: .def, width: geometry.size.width / 7, text: " - начальный цвет, который означает, что никакой информации по этой букве на поле еще не получено.")
                            
                            KeyboardKeyRuleView(state: .exists, width: geometry.size.width / 7, text: " - буква присутствует хотя бы в одном из шести загаданных на поле слов.")
                            
                            KeyboardKeyRuleView(state: .notExists, width: geometry.size.width / 7, text: " - буквы нет ни в одном из загаданных слов на поле.")
                        }
                        
                        Group {
                            Text("Что если я знаю или предполагаю какая буква должна быть в клетке?")
                                .font(.title.bold())
                            
                            Text("Вы можете делать заметки в клетках. Для этого нажмите на клетку. Она должна перейти в режим редактирования, как показано ниже.")
                            
                            HStack {
                                Spacer()
                                TileView(tileModel: TileModel.exampleEditting)
                                    .frame(width: geometry.size.width / 4)
                                    .disabled(true)
                                Spacer()
                            }
                            
                            Text("В режиме редактирования нажмите на предполагаемую букву на клавиатуре. Тем самым вы поставите заметку в клетке. Есть два типа заметок. Если вы нажмете дважды по клетке, то увидите, как менаяется цвет буквы в ней. Это сделано для того, чтобы вы могли обозначить, уверены ли вы в этой букве или сомневаетесь. Выбор остается за вами, какой из типов что будет обозначать.")
                            
                            HStack {
                                Spacer()
                                TileView(tileModel: TileModel.exampleMarkedNotSure)
                                    .frame(width: geometry.size.width / 4)
                                    .disabled(true)
                                Spacer()
                                TileView(tileModel: TileModel.exampleMarkedSure)
                                    .frame(width: geometry.size.width / 4)
                                    .disabled(true)
                                Spacer()
                            }
                            
                            Text("Не стоит забывать, что даже не смотря на то, что вы пометили клетку правильной буквой, ее все равно нужно открыть!")
                        }
                        
                        Group {
                            Text("Подведем итоги")
                                .font(.title.bold())
                            
                            Text("В сетке загадано 6 слов, вам дано 10 попыток со старта и еще есть возможность получить 5 дополнительных попыток, чтобы их отгадать. Загаданное слово одновременно записывается и в строку и в столбец. Вам не нужно выбирать куда его записать, игра автоматически циклично перемещаться по рядам. Но вы можете ставить заметки для клеток, в которых хотите попробовать букву позднее. Для того, чтобы отгадать слово, необязательно вводить непосредственно само слово, достаточно открыть все буквы.")
                            
                            Text("Это все, что вам нужно знать! Желаю удачи!")
                                .font(.title.bold())
                        }
                    }
                    .fixedSize(horizontal: false, vertical: true)
                }
            }
        }
        .padding(.horizontal)
        .background(ThemeModel.main.backgroundColor)
    }
}

struct RulesView_Previews: PreviewProvider {
    static var previews: some View {
        RulesView(){}
    }
}
